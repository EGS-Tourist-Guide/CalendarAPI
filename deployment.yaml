apiVersion: v1
kind: Namespace
metadata:
  name: egs-touristguide

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim4
  namespace: egs-touristguide
spec:
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: egs-touristguide
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          args:
            - "--ignore-db-dir=lost+found"
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "password"
            - name: MYSQL_DATABASE
              value: "storeDB"
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
            - name: init-db-script
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim4
        - name: init-db-script
          configMap:
            name: mysql-init-db

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: egs-touristguide
spec:
  selector:
    app: mysql
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  clusterIP: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: calendar-app
  namespace: egs-touristguide
spec:
  replicas: 1
  selector:
    matchLabels:
      app: calendar-app
  template:
    metadata:
      labels:
        app: calendar-app
    spec:
      containers:
        - name: calendar-app
          image: registry.deti/egs-touristguide/calendar:v15
          env:
            - name: DB_HOST
              value: "mysql-service"
            - name: DB_USER
              value: "root"
            - name: DB_PASSWORD
              value: "password"
            - name: DB_DATABASE
              value: "storeDB"
            - name: GOOGLE_CLIENT_ID
              value: "1097079419283-psuc88td31d76u10689a97tlofj6drsk.apps.googleusercontent.com"
            - name: GOOGLE_CLIENT_SECRET
              value: "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"
            - name: CALLBACK_URL
              value: "https://www.touristguide.work.gd/oauth2callback"
          ports:
            - containerPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: calendar-app-service
  namespace: egs-touristguide
spec:
  selector:
    app: calendar-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: LoadBalancer

---



apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: touristguide-k3s
  namespace: egs-touristguide
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
spec:
  rules:
  - host: srv2-deti.ua.pt
    http:
      paths:
      - path: /api-docs
        pathType: Prefix
        backend:
          service:
            name: calendar-app-service
            port:
              number: 80
      - path: /graphql
        pathType: Prefix
        backend:
          service:
            name: poi-app-service
            port:
              number: 80



# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: touristguide-k3s
#   namespace: egs-touristguide
#   annotations:
#     kubernetes.io/ingress.class: traefik
#     traefik.ingress.kubernetes.io/frontend-entry-points: http,https
#     traefik.ingress.kubernetes.io/redirect-entry-point: https
#     traefik.ingress.kubernetes.io/redirect-permanent: "true"
# spec:
#   rules:
#     - host: srv2-deti.ua.pt
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: nginx-service
#                 port:
#                   number: 80
          # - path: /poi
          #   pathType: Prefix
          #   backend:
          #     service:
          #       name: nginx-service
          #       port:
          #         number: 80



# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: nginx
#   namespace: egs-touristguide
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: nginx
#   template:
#     metadata:
#       labels:
#         app: nginx
#     spec:
#       containers:
#         - name: nginx
#           image: nginx:latest
#           ports:
#             - containerPort: 80
#           volumeMounts:
#             - name: nginx-config
#               mountPath: /etc/nginx/nginx.conf
#               subPath: nginx.conf
#       volumes:
#         - name: nginx-config
#           configMap:
#             name: nginx-config

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-service
#   namespace: egs-touristguide
# spec:
#   selector:
#     app: nginx
#   ports:
#     - protocol: TCP
#       port: 80
#       targetPort: 80
#   type: LoadBalancer
