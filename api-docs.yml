openapi: 3.0.0
servers:
  - url: http://localhost:3000/
info:
  title: Calendar API
  version: "1.0"
security:
  - ApiKeyAuth: []
paths:
  /v1/login:
    get:
      summary: Redirect to Google's OAuth 2.0 server
      description: Initiates the OAuth 2.0 authentication flow by redirecting the user to Google's OAuth 2.0 server.
      responses:
        '302':
          description: Redirects to Google OAuth server
        '400':
          description: Bad request, check if parameters are correct
        '500':
          description: Internal server error
  /oauth2callback:
    get:
      summary: OAuth 2.0 Callback Endpoint
      description: >
        Handles the callback from Google's OAuth 2.0 server. This endpoint exchanges
        the authorization code for access and refresh tokens with Google. After obtaining
        and storing the user's information, it redirects to an intermediate page which
        then can handle further user-specific redirection or actions.
      responses:
        '302':
          description: Found. Redirect to an intermediate success page.
          headers:
            Location:
              schema:
                type: string
                example: /auth-success.html?userId=12345
              description: Redirect location to the success page with the user ID as a query parameter.
        '400':
          description: Bad request, failed to exchange authorization code.
        '500':
          description: Internal server error, failed to process the request.

  /v1/{userId}/:
    post:
      summary: Create a new calendar for the user and returns the calendarID associated to the user
      description: Creates a new calendar associated with the specified user within the application.
      parameters:
        - in: path
          name: userId
          required: true
          description: The ID of the user for whom the calendar is being created.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the calendar.
                  example: 'Personal Calendar'
      responses:
        '201':
          description: Calendar successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message.
                    example: 'Calendar created successfully.'
                  calendarId:
                    type: integer
                    description: The calendarId the user.
        '400':
          description: Bad Request. User already has a calendar.
        '404':
          description: User not found for the given user ID.
        '500':
          description: Internal Server Error. Failed to create calendar.

  /v1/{userId}/calendars:
    post:
      summary: Inserts a new event into the user's calendar with the provided details.
      description: Adds the event with the provided details to the user's calendar if it exists. Optionally includes an 'obs' field to associate the event with an external reference or ID.
      parameters:
        - in: path
          name: userId
          required: true
          description: The ID of the user whose calendar is being modified.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                summary:
                  type: string
                  description: A short summary of the event.
                location:
                  type: string
                  description: The location where the event will take place.
                description:
                  type: string
                  description: A detailed description of the event.
                start:
                  type: string
                  description: The start date and time of the event in the format 'YYYY-MM-DD HH:MM:SS'.
                end:
                  type: string
                  description: The end date and time of the event in the format 'YYYY-MM-DD HH:MM:SS'.
                timezone:
                  type: string
                  description: The timezone of the event.
                obs:
                  type: string
                  description: An optional unique identifier or reference for the event.
              example:
                summary: Team Meeting
                location: Office Conference Room
                description: Discuss project updates and next steps.
                start: "2024-03-19 09:00:00"
                end: "2024-03-19 10:00:00"
                timezone: Europe/Lisbon
                obs: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '201':
          description: Event added successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message.
                    example: 'Event added successfully'
                  calendarId:
                    type: integer
                    description: The calendarId the user.
        '404':
          description: Calendar not found for the given user ID.
        '500':
          description: Failed to process request.


  /v1/{userId}/calendars/{eventId}:
    get:
      summary: Retrieve a specific event from a user's calendar
      description: Retrieves details of a specific event associated with the specified user's calendar using the event ID.
      parameters:
        - in: path
          name: userId
          required: true
          description: The ID of the user whose calendar event is being retrieved.
          schema:
            type: integer
        - in: path
          name: eventId
          required: true
          description: The ID of the event to retrieve.
          schema:
            type: integer
      responses:
        '200':
          description: The details of the calendar event successfully retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: string
                    description: A brief summary of the event.
                  location:
                    type: string
                    description: The location of the event.
                  description:
                    type: string
                    description: A detailed description of the event.
                  startDateTime:
                    type: string
                    format: date-time
                    description: The start date and time of the event.
                  endDateTime:
                    type: string
                    format: date-time
                    description: The end date and time of the event.
                  timeZone:
                    type: string
                    description: The timezone of the event.
                example:
                  summary: Team Meeting
                  location: Office Conference Room
                  description: Discuss project updates and next steps.
                  start: "2024-03-19 09:00:00"
                  end: "2024-03-19 10:00:00"
                  timezone: Europe/Lisbon                    
        '404':
          description: Calendar not found for the given user ID, or event not found for the given event ID.
        '500':
          description: Internal Server Error. Failed to retrieve the event.

    patch:
      summary: Updates an existing event in the user's calendar
      description: If the user's calendar exists, it updates the event with the provided details. 
      parameters:
        - in: path
          name: userId
          required: true
          description: The ID of the user whose calendar is being modified.
          schema:
            type: integer
        - in: path
          name: eventId
          required: true
          description: The ID of the event that is being updated.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                summary:
                  type: string
                  description: A short summary of the event.
                location:
                  type: string
                  description: The location where the event will take place.
                description:
                  type: string
                  description: A detailed description of the event.
                start:
                  type: string
                  format: 'date-time'
                  description: The start date and time of the event in "YYYY-MM-DD HH:MM:SS" format.
                  example: '2024-03-19 10:00:00'
                end:
                  type: string
                  format: 'date-time'
                  description: The end date and time of the event in "YYYY-MM-DD HH:MM:SS" format.
                  example: '2024-03-19 11:00:00'
                timezone:
                  type: string
                  description: The timezone of the event. Example values can be 'UTC', 'Europe/London', etc.
      responses:
        '200':
          description: Event updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Event updated successfully'
                  eventId:
                    type: integer
                    description: The ID of the updated event.
        '404':
          description: Calendar not found for the given user ID or event not found in the user's calendar.
        '500':
          description: Failed to process request.

    delete:
      summary: delete an existing event in the user's calendar
      description: If the user's calendar exists, it deletes the event with the provided details. 
      parameters:
        - in: path
          name: userId
          required: true
          description: The ID of the user whose calendar is being modified.
          schema:
            type: integer
        - in: path
          name: eventId
          required: true
          description: The ID of the event that is being updated.
          schema:
            type: integer

      responses:
        '200':
          description: Event deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Event updated successfully'
                  eventId:
                    type: integer
                    description: The ID of the updated event.
        '404':
          description: Calendar not found for the given user ID or event not found in the user's calendar.
        '500':
          description: Failed to process request.


components:
  securitySchemes:
    ApiKeyAuth:  
      type: apiKey
      in: header
      name: x-api-key  # This should match the header name used in your requests

